{"version":3,"file":"static/js/470.c9774fa7.chunk.js","mappings":"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","sources":["Pages/Auth/Headerauth/Headerauth.js","Pages/Auth/Login/index.js","Pages/Auth/Login/Login.jsx","webpack://acadify_saas_frontend/./src/Shared/Button/style.module.scss?ba54","Shared/Button/Button.jsx","webpack://acadify_saas_frontend/./src/Shared/InputField/style.module.scss?5e45","Shared/InputField/InputField.jsx","Shared/InputField/index.js"],"sourcesContent":["import React from \"react\";\nimport \"./Headerauth.scss\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Headerauth() {\n  let history = useHistory();\n  return (\n    <div className=\"col-sm-12 px-md-5 \">\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <img\n            src=\"../images/plexar/plexaarlogo.png\"\n            className=\"img-fluid plexar_logo\"\n          />\n        </div>\n        <div className=\"col-md-6 text-right m-auto\">\n          <span className=\"color_font_one\">Already have account?</span>\n          <button className=\"btn btn-primary rounded-pill login_button_style\">\n            Login\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Headerauth;\n","import Login from \"./Login\";\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Form, FormikProvider, useFormik } from \"formik\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport { loginUser, registerapi } from \"../../../Store/Auth/actions\";\nimport Button from \"../../../Shared/Button/Button\";\nimport InputField from \"../../../Shared/InputField\";\nimport Headerauth from \"../Headerauth/Headerauth\";\nimport \"./Login.scss\";\nimport { DEVICE_ID } from \"../../../Constants/ImgConstants\";\n\nexport default function Login(props) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [isValid, setValid] = useState(false);\n  const dispatch = useDispatch();\n  let history = useHistory();\n\n  /////for demo\n  const validateEmail = (email) => {\n    const regex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i;\n    return regex.test(email);\n  };\n  const handleNumberChange = (event) => {\n    const valuew = event.target.value;\n    setEmail(valuew);\n    setValid(validateEmail(valuew));\n  };\n  const handleSubmit = () => {\n    console.log(\"button clicked\");\n    dispatch(\n      registerapi({\n        email: email,\n        countryId: 2,\n        deviceId: DEVICE_ID,\n        // history: history,\n        setIsLoading,\n      })\n    );\n    // history.push(`/password/${email}`);\n  };\n  return (\n    <div className=\"col-sm-12 px-0 height_page\">\n      <div className=\"col-sm-12 padding_top_bottom_equal\">\n        <Headerauth />\n      </div>\n      <div className=\"col-md-12 \">\n        <div className=\"col-md-12 px-5\">\n          <div className=\"row\">\n            <div className=\"col-md-3 background_plexar text-center  d-flex align-items-center  justify-content-center\">\n              <img\n                className=\"img-fluid img_plexar_width\"\n                src=\"../images/plexar/plexar.png\"\n              />\n            </div>\n            <div className=\"col-md-9 border_welcome_to_plexar text-center \">\n              <div className=\"col-md-12 alignment_vertically\">\n                <h2>\n                  <b>\n                    Welcome to <span className=\"plexar_font\">Plexaar!</span>\n                  </b>\n                </h2>\n                <p className=\"sub_heading\">Enter Your email</p>\n                <div className=\"col-md-12\">\n                  <div className=\"row\">\n                    <div className=\"col-md-4\"></div>\n                    <div className=\"col-md-4\">\n                      <input\n                        className=\"form-control form-control-lg mt-5 background_color_gray\"\n                        placeholder=\"Email Address\"\n                        value={email}\n                        onChange={handleNumberChange}\n                        type=\"email\"\n                      />\n                      {isValid ? (\n                        <span className=\"text_valid pt-3\">\n                          ✔️ Email is Valid\n                        </span>\n                      ) : (\n                        <span className=\"text_invalid\">\n                          ❌ Email is invalid{\" \"}\n                        </span>\n                      )}\n\n                      <div className=\"col-md-12 px-0\">\n                        {isValid ? (\n                          <button\n                            className=\"btn btn-primary button_width btn-lg\"\n                            onClick={handleSubmit}\n                          >\n                            {isLoading ? (\n                              <div\n                                class=\"spinner-border text-light\"\n                                role=\"status\"\n                              >\n                                <span class=\"sr-only\">Loading...</span>\n                              </div>\n                            ) : (\n                              <>Next</>\n                            )}\n                          </button>\n                        ) : (\n                          <button\n                            disabled\n                            className=\"btn btn-primary button_width_disabled btn-lg\"\n                          >\n                            {\" \"}\n                            Next{\" \"}\n                          </button>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"col-md-4\"></div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-12 bottom_attach \">\n                <hr />\n                <p className=\"sub_heading\">\n                  Terms & Conditions. Privacy Policy. Copyright. Cookies Policy.\n                  Help\n                </p>\n                <p className=\"sub_heading\">&copy; Selteq Ltd.</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"btnDesign\":\"style_btnDesign__SmFZj\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport styles from \"./style.module.scss\";\n\nexport default function Button(props) {\n  const {\n    className,\n    onHandleClick,\n    children,\n    variant,\n    color,\n    type,\n    size,\n    shape,\n    isLoading,\n    ...rest\n  } = props;\n\n  const styleClass = classNames(\n    `btn ${styles.btnDesign}`,\n    variant ? `btn-${variant}-${color}` : `btn-${color}`,\n    { [`btn-${size}`]: size },\n    shape,\n    className\n  );\n\n  return (\n    <button\n      className={styleClass}\n      type={type}\n      disabled={isLoading}\n      onClick={onHandleClick}\n      {...rest}\n    >\n      {isLoading ? <div class=\"spinner-border\" role=\"status\" /> : children}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  className: PropTypes.string,\n  onHandleClick: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  color: PropTypes.string,\n  shape: PropTypes.string,\n  isLoading: PropTypes.bool,\n  size: PropTypes.oneOf([\"sm\", \"lg\"]),\n  type: PropTypes.oneOf([\"button\", \"submit\", \"reset\"]),\n  variant: PropTypes.oneOf([\"outline\", \"ghost\"]),\n};\nButton.defaultProps = {\n  className: \"\",\n  variant: null,\n  size: null,\n  isLoading: false,\n  onHandleClick: () => {},\n  color: \"primary\",\n  type: \"button\",\n  shape: \"rounded-1\",\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"inputFormDiv\":\"style_inputFormDiv__YOxui\",\"inputDesign\":\"style_inputDesign__QioYv\",\"errorMessage\":\"style_errorMessage__exT93\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Text from \"../Text\";\nimport styles from \"./style.module.scss\";\n\nexport default function InputField(props) {\n  const {\n    placeholder,\n    type,\n    onHandleChange,\n    value,\n    name,\n    className,\n    error,\n    disabled,\n    helpertext,\n    inputFormDiv,\n  } = props;\n\n  return (\n    <div className={`${styles.inputFormDiv} ${inputFormDiv}`}>\n      <input\n        type={type}\n        placeholder={placeholder}\n        name={name}\n        className={`${styles.inputDesign} ${className}`}\n        disabled={disabled}\n        onChange={onHandleChange}\n        value={value}\n      />\n      {error ? <Text className={styles.errorMessage}>{helpertext}</Text> : null}\n    </div>\n  );\n}\n\nInputField.propTypes = {\n  placeholder: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  inputFormDiv: PropTypes.string,\n  disabled: PropTypes.bool,\n  helpertext: PropTypes.string,\n  error: PropTypes.bool,\n  onHandleChange: PropTypes.func,\n  type: PropTypes.string,\n  value: PropTypes.string,\n  name: PropTypes.string,\n};\n\nInputField.defaultProps = {\n  placeholder: \"\",\n  type: \"\",\n  value: \"\",\n  name: \"\",\n  inputFormDiv: \"\",\n  onHandleChange: () => {},\n  className: null,\n  disabled: null,\n  helpertext: null,\n  error: true,\n};\n","import InputField from \"./InputField\";\n\nexport default InputField;\n"],"names":["useHistory","className","src","props","useState","isLoading","setIsLoading","email","setEmail","isValid","setValid","dispatch","useDispatch","Headerauth","placeholder","value","onChange","event","valuew","target","test","validateEmail","type","onClick","console","log","registerapi","countryId","deviceId","DEVICE_ID","class","role","disabled","Button","onHandleClick","children","variant","color","size","shape","rest","styleClass","classNames","styles","defaultProps","InputField","onHandleChange","name","error","helpertext","inputFormDiv","Text"],"sourceRoot":""}