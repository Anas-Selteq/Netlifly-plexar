{"version":3,"file":"static/js/437.b5f6bd28.chunk.js","mappings":"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","sources":["Pages/Auth/Emailverification/Emailverification.js","Pages/Auth/Headerauth/Headerauth.js","webpack://acadify_saas_frontend/./src/Shared/Button/style.module.scss?ba54","Shared/Button/Button.jsx","webpack://acadify_saas_frontend/./src/Shared/InputField/style.module.scss?5e45","Shared/InputField/InputField.jsx","Shared/InputField/index.js","../node_modules/src/index.tsx","../node_modules/react-router-dom/modules/BrowserRouter.js","../node_modules/react-router-dom/modules/HashRouter.js","../node_modules/react-router-dom/modules/utils/locationUtils.js","../node_modules/react-router-dom/modules/Link.js","../node_modules/react-router-dom/modules/NavLink.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Form, FormikProvider, useFormik } from \"formik\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\nimport { loginUser, resendnewprimaryemailotp, sendotopemail } from \"../../../Store/Auth/actions\";\r\nimport Button from \"../../../Shared/Button/Button\";\r\nimport InputField from \"../../../Shared/InputField\";\r\nimport Headerauth from \"../Headerauth/Headerauth\";\r\nimport \"../Login/Login.scss\";\r\nimport OtpInput from \"react-otp-input\";\r\nimport { useParams } from \"react-router-dom/cjs/react-router-dom\";\r\n\r\nexport default function Password(props) {\r\n  const [time, setTime] = useState(110); // Initial time in seconds\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isLoadingresend, setIsLoadingresend] = useState(false);\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [isVisible, setVisible] = useState(false);\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\n  const userid = useSelector((state) => state.Auth?.registersuccessId);\r\n  let { email } = useParams();\r\n  console.log(\"search params\", email);\r\n  const toggle = () => {\r\n    setVisible(!isVisible);\r\n  };\r\n  useEffect(() => {\r\n    let interval = null;\r\n\r\n    if (isActive) {\r\n      interval = setInterval(() => {\r\n        setTime((prevTime) => {\r\n          if (prevTime === 0) {\r\n            clearInterval(interval);\r\n            setIsActive(false);\r\n            return 110; // Reset the time to 1 minute 50 seconds\r\n          } else {\r\n            return prevTime - 1;\r\n          }\r\n        });\r\n      }, 1000);\r\n    } else {\r\n      clearInterval(interval);\r\n    }\r\n\r\n    // Clean up the interval on component unmount\r\n    return () => clearInterval(interval);\r\n  }, [isActive]);\r\n\r\n\r\n  \r\n  const formatTime = () => {\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = time % 60;\r\n\r\n    const formattedMinutes = String(minutes).padStart(2, '0');\r\n    const formattedSeconds = String(seconds).padStart(2, '0');\r\n\r\n    return `${formattedMinutes}:${formattedSeconds}`;\r\n  };\r\n  const handleSubmit = () => {\r\n    dispatch(\r\n      sendotopemail({\r\n        otpCode: otp,\r\n        email: email,\r\n        userId: userid,\r\n        setIsLoading,\r\n      })\r\n    );\r\n  };\r\n\r\n  const resendotponcallprimaryemail = () =>{\r\n    dispatch(\r\n      resendnewprimaryemailotp({\r\n        id: userid,\r\n        type: 1,\r\n        setIsActive,\r\n        setIsLoadingresend,\r\n      })\r\n    );\r\n    if (!isActive) {\r\n      setTime(110); // Reset the time to 1 minute 50 seconds\r\n    }\r\n  }\r\n  console.log(\"user---------------------- file->00\", userid);\r\n  return (\r\n    <div className=\"col-sm-12 px-0 height_page\">\r\n      <div className=\"col-sm-12 padding_top_bottom_equal\">\r\n        <Headerauth />\r\n      </div>\r\n      <div className=\"col-md-12 \">\r\n        <div className=\"col-md-12 px-5\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3 background_plexar text-center  d-flex align-items-center  justify-content-center\">\r\n              <img\r\n                className=\"img-fluid img_plexar_width\"\r\n                src=\"../images/plexar/plexar.png\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-9 border_welcome_to_plexar text-center \">\r\n              <div className=\"col-md-12 alignment_vertically\">\r\n                <h2>\r\n                  <b>\r\n                    Email <span className=\"plexar_font\">Verification</span>\r\n                  </b>\r\n                </h2>\r\n                <p className=\"sub_heading mb-0\">\r\n                  Entered the code that was sent to\r\n                </p>\r\n                <p className=\"sub_heading1\">{email}</p>\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-4\"></div>\r\n                    <div className=\"col-md-4 pt-3\">\r\n                      <OtpInput\r\n                        value={otp}\r\n                        onChange={setOtp}\r\n                        className=\"input_style\"\r\n                        numInputs={6}\r\n                        renderSeparator={<span>&nbsp;&nbsp;&nbsp;</span>}\r\n                        renderInput={(props) => <input {...props} />}\r\n                      />\r\n                      <div className=\"col-md-12 text-center\">\r\n                        <p className=\"mb-1 pt-3 having_problrm\">\r\n                          Having problem?\r\n                        </p>\r\n                        {isActive?  <p className=\"mb-0 resend_button_disabled\"  >Resend Code</p> :  <p className=\"mb-0 resend_button\" onClick={resendotponcallprimaryemail} >Resend Code</p> }\r\n                        {isLoadingresend ? (\r\n                              <div\r\n                                class=\"spinner-border spinner-sm text-primary\"\r\n                                role=\"status\"\r\n                              >\r\n                                <span class=\"sr-only\">Loading...</span>\r\n                              </div>\r\n                            ) : (\r\n                             null\r\n                            )}\r\n                       \r\n                       <p className=\" having_problrm\"> {isActive ? <div>{formatTime()}</div> : null } </p>\r\n                        \r\n                      </div>\r\n                      <div className=\"col-md-12 px-0 \">\r\n                        {otp.length === 6 ? (\r\n                          <button\r\n                            className=\"btn btn-primary button_width btn-lg\"\r\n                            // onClick={() => history.push(`/create-password`)}\r\n                            onClick={handleSubmit}\r\n                          >\r\n                            {isLoading ? (\r\n                              <div\r\n                                class=\"spinner-border text-light\"\r\n                                role=\"status\"\r\n                              >\r\n                                <span class=\"sr-only\">Loading...</span>\r\n                              </div>\r\n                            ) : (\r\n                              <>Verify Now</>\r\n                            )}\r\n                          </button>\r\n                        ) : (\r\n                          <button\r\n                            className=\"btn btn-primary button_width_disabled button_width btn-lg\"\r\n                            // onClick={() => history.push(`/create-password`)}\r\n                            disabled\r\n                          >\r\n                            Verify Now\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-12 bottom_attach \">\r\n                <hr />\r\n                <p className=\"sub_heading\">\r\n                  Terms & Conditions. Privacy Policy. Copyright. Cookies Policy.\r\n                  Help\r\n                </p>\r\n                <p className=\"sub_heading\">&copy; Selteq Ltd.</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./Headerauth.scss\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Headerauth() {\n  let history = useHistory();\n  return (\n    <div className=\"col-sm-12 px-md-5 \">\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <img\n            src=\"../images/plexar/plexaarlogo.png\"\n            className=\"img-fluid plexar_logo\"\n          />\n        </div>\n        <div className=\"col-md-6 text-right m-auto\">\n          <span className=\"color_font_one\">Already have account?</span>\n          <button className=\"btn btn-primary rounded-pill login_button_style\">\n            Login\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Headerauth;\n","// extracted by mini-css-extract-plugin\nexport default {\"btnDesign\":\"style_btnDesign__SmFZj\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport styles from \"./style.module.scss\";\n\nexport default function Button(props) {\n  const {\n    className,\n    onHandleClick,\n    children,\n    variant,\n    color,\n    type,\n    size,\n    shape,\n    isLoading,\n    ...rest\n  } = props;\n\n  const styleClass = classNames(\n    `btn ${styles.btnDesign}`,\n    variant ? `btn-${variant}-${color}` : `btn-${color}`,\n    { [`btn-${size}`]: size },\n    shape,\n    className\n  );\n\n  return (\n    <button\n      className={styleClass}\n      type={type}\n      disabled={isLoading}\n      onClick={onHandleClick}\n      {...rest}\n    >\n      {isLoading ? <div class=\"spinner-border\" role=\"status\" /> : children}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  className: PropTypes.string,\n  onHandleClick: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  color: PropTypes.string,\n  shape: PropTypes.string,\n  isLoading: PropTypes.bool,\n  size: PropTypes.oneOf([\"sm\", \"lg\"]),\n  type: PropTypes.oneOf([\"button\", \"submit\", \"reset\"]),\n  variant: PropTypes.oneOf([\"outline\", \"ghost\"]),\n};\nButton.defaultProps = {\n  className: \"\",\n  variant: null,\n  size: null,\n  isLoading: false,\n  onHandleClick: () => {},\n  color: \"primary\",\n  type: \"button\",\n  shape: \"rounded-1\",\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"inputFormDiv\":\"style_inputFormDiv__YOxui\",\"inputDesign\":\"style_inputDesign__QioYv\",\"errorMessage\":\"style_errorMessage__exT93\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Text from \"../Text\";\nimport styles from \"./style.module.scss\";\n\nexport default function InputField(props) {\n  const {\n    placeholder,\n    type,\n    onHandleChange,\n    value,\n    name,\n    className,\n    error,\n    disabled,\n    helpertext,\n    inputFormDiv,\n  } = props;\n\n  return (\n    <div className={`${styles.inputFormDiv} ${inputFormDiv}`}>\n      <input\n        type={type}\n        placeholder={placeholder}\n        name={name}\n        className={`${styles.inputDesign} ${className}`}\n        disabled={disabled}\n        onChange={onHandleChange}\n        value={value}\n      />\n      {error ? <Text className={styles.errorMessage}>{helpertext}</Text> : null}\n    </div>\n  );\n}\n\nInputField.propTypes = {\n  placeholder: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  inputFormDiv: PropTypes.string,\n  disabled: PropTypes.bool,\n  helpertext: PropTypes.string,\n  error: PropTypes.bool,\n  onHandleChange: PropTypes.func,\n  type: PropTypes.string,\n  value: PropTypes.string,\n  name: PropTypes.string,\n};\n\nInputField.defaultProps = {\n  placeholder: \"\",\n  type: \"\",\n  value: \"\",\n  name: \"\",\n  inputFormDiv: \"\",\n  onHandleChange: () => {},\n  className: null,\n  disabled: null,\n  helpertext: null,\n  error: true,\n};\n","import InputField from \"./InputField\";\n\nexport default InputField;\n","import React from 'react';\n\ntype AllowedInputTypes = 'password' | 'text' | 'number' | 'tel';\n\ntype InputProps = Required<\n  Pick<\n    React.InputHTMLAttributes<HTMLInputElement>,\n    | 'value'\n    | 'onChange'\n    | 'onFocus'\n    | 'onBlur'\n    | 'onKeyDown'\n    | 'onPaste'\n    | 'aria-label'\n    | 'maxLength'\n    | 'autoComplete'\n    | 'style'\n  > & {\n    ref: React.RefCallback<HTMLInputElement>;\n    placeholder: string | undefined;\n    className: string | undefined;\n    type: AllowedInputTypes;\n  }\n>;\n\ninterface OTPInputProps {\n  /** Value of the OTP input */\n  value?: string;\n  /** Number of OTP inputs to be rendered */\n  numInputs?: number;\n  /** Callback to be called when the OTP value changes */\n  onChange: (otp: string) => void;\n  /** Function to render the input */\n  renderInput: (inputProps: InputProps, index: number) => React.ReactNode;\n  /** Whether the first input should be auto focused */\n  shouldAutoFocus?: boolean;\n  /** Placeholder for the inputs */\n  placeholder?: string;\n  /** Function to render the separator */\n  renderSeparator?: ((index: number) => React.ReactNode) | React.ReactNode;\n  /** Style for the container */\n  containerStyle?: React.CSSProperties | string;\n  /** Style for the input */\n  inputStyle?: React.CSSProperties | string;\n  /** The type that will be passed to the input being rendered */\n  inputType?: AllowedInputTypes;\n}\n\nconst isStyleObject = (obj: unknown) => typeof obj === 'object' && obj !== null;\n\nconst OTPInput = ({\n  value = '',\n  numInputs = 4,\n  onChange,\n  renderInput,\n  shouldAutoFocus = false,\n  inputType = 'text',\n  renderSeparator,\n  placeholder,\n  containerStyle,\n  inputStyle,\n}: OTPInputProps) => {\n  const [activeInput, setActiveInput] = React.useState(0);\n  const inputRefs = React.useRef<Array<HTMLInputElement | null>>([]);\n\n  const getOTPValue = () => (value ? value.toString().split('') : []);\n\n  const isInputNum = inputType === 'number' || inputType === 'tel';\n\n  React.useEffect(() => {\n    inputRefs.current = inputRefs.current.slice(0, numInputs);\n  }, [numInputs]);\n\n  React.useEffect(() => {\n    if (shouldAutoFocus) {\n      inputRefs.current[0]?.focus();\n    }\n  }, [shouldAutoFocus]);\n\n  const getPlaceholderValue = () => {\n    if (typeof placeholder === 'string') {\n      if (placeholder.length === numInputs) {\n        return placeholder;\n      }\n\n      if (placeholder.length > 0) {\n        console.error('Length of the placeholder should be equal to the number of inputs.');\n      }\n    }\n    return undefined;\n  };\n\n  const isInputValueValid = (value: string) => {\n    const isTypeValid = isInputNum ? !isNaN(Number(value)) : typeof value === 'string';\n    return isTypeValid && value.trim().length === 1;\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    if (isInputValueValid(value)) {\n      changeCodeAtFocus(value);\n      focusInput(activeInput + 1);\n    } else {\n      const { nativeEvent } = event;\n      // @ts-expect-error - This was added previosly to handle and edge case\n      // for dealing with keyCode \"229 Unidentified\" on Android. Check if this is\n      // still needed.\n      if (nativeEvent.data === null && nativeEvent.inputType === 'deleteContentBackward') {\n        event.preventDefault();\n        changeCodeAtFocus('');\n        focusInput(activeInput - 1);\n      }\n    }\n  };\n\n  const handleFocus = (event: React.FocusEvent<HTMLInputElement>) => (index: number) => {\n    setActiveInput(index);\n    event.target.select();\n  };\n\n  const handleBlur = () => {\n    setActiveInput(activeInput - 1);\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    const otp = getOTPValue();\n    if ([event.code, event.key].includes('Backspace')) {\n      event.preventDefault();\n      changeCodeAtFocus('');\n      focusInput(activeInput - 1);\n    } else if (event.code === 'Delete') {\n      event.preventDefault();\n      changeCodeAtFocus('');\n    } else if (event.code === 'ArrowLeft') {\n      event.preventDefault();\n      focusInput(activeInput - 1);\n    } else if (event.code === 'ArrowRight') {\n      event.preventDefault();\n      focusInput(activeInput + 1);\n    }\n    // React does not trigger onChange when the same value is entered\n    // again. So we need to focus the next input manually in this case.\n    else if (event.key === otp[activeInput]) {\n      event.preventDefault();\n      focusInput(activeInput + 1);\n    } else if (\n      event.code === 'Spacebar' ||\n      event.code === 'Space' ||\n      event.code === 'ArrowUp' ||\n      event.code === 'ArrowDown'\n    ) {\n      event.preventDefault();\n    } else if (isInputNum && !isInputValueValid(event.key)) {\n      event.preventDefault();\n    }\n  };\n\n  const focusInput = (index: number) => {\n    const activeInput = Math.max(Math.min(numInputs - 1, index), 0);\n\n    if (inputRefs.current[activeInput]) {\n      inputRefs.current[activeInput]?.focus();\n      inputRefs.current[activeInput]?.select();\n      setActiveInput(activeInput);\n    }\n  };\n\n  const changeCodeAtFocus = (value: string) => {\n    const otp = getOTPValue();\n    otp[activeInput] = value[0];\n    handleOTPChange(otp);\n  };\n\n  const handleOTPChange = (otp: Array<string>) => {\n    const otpValue = otp.join('');\n    onChange(otpValue);\n  };\n\n  const handlePaste = (event: React.ClipboardEvent<HTMLInputElement>) => {\n    event.preventDefault();\n\n    const otp = getOTPValue();\n    let nextActiveInput = activeInput;\n\n    // Get pastedData in an array of max size (num of inputs - current position)\n    const pastedData = event.clipboardData\n      .getData('text/plain')\n      .slice(0, numInputs - activeInput)\n      .split('');\n\n    // Prevent pasting if the clipboard data contains non-numeric values for number inputs\n    if (isInputNum && pastedData.some((value) => isNaN(Number(value)))) {\n      return;\n    }\n\n    // Paste data from focused input onwards\n    for (let pos = 0; pos < numInputs; ++pos) {\n      if (pos >= activeInput && pastedData.length > 0) {\n        otp[pos] = pastedData.shift() ?? '';\n        nextActiveInput++;\n      }\n    }\n\n    focusInput(nextActiveInput);\n    handleOTPChange(otp);\n  };\n\n  return (\n    <div\n      style={Object.assign({ display: 'flex', alignItems: 'center' }, isStyleObject(containerStyle) && containerStyle)}\n      className={typeof containerStyle === 'string' ? containerStyle : undefined}\n    >\n      {Array.from({ length: numInputs }, (_, index) => index).map((index) => (\n        <React.Fragment key={index}>\n          {renderInput(\n            {\n              value: getOTPValue()[index] ?? '',\n              placeholder: getPlaceholderValue()?.[index] ?? undefined,\n              ref: (element) => (inputRefs.current[index] = element),\n              onChange: handleChange,\n              onFocus: (event) => handleFocus(event)(index),\n              onBlur: handleBlur,\n              onKeyDown: handleKeyDown,\n              onPaste: handlePaste,\n              autoComplete: 'off',\n              maxLength: 1,\n              'aria-label': `Please enter OTP character ${index + 1}`,\n              style: Object.assign(\n                { width: '1em', textAlign: 'center' } as const,\n                isStyleObject(inputStyle) && inputStyle\n              ),\n              className: typeof inputStyle === 'string' ? inputStyle : undefined,\n              type: inputType,\n            },\n            index\n          )}\n          {index < numInputs - 1 && (typeof renderSeparator === 'function' ? renderSeparator(index) : renderSeparator)}\n        </React.Fragment>\n      ))}\n    </div>\n  );\n};\n\nexport default OTPInput;\n","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createBrowserHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\nclass BrowserRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  BrowserRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    forceRefresh: PropTypes.bool,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number\n  };\n\n  BrowserRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<BrowserRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { BrowserRouter as Router }`.\"\n    );\n  };\n}\n\nexport default BrowserRouter;\n","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createHashHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\nclass HashRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  HashRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    getUserConfirmation: PropTypes.func,\n    hashType: PropTypes.oneOf([\"hashbang\", \"noslash\", \"slash\"])\n  };\n\n  HashRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<HashRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { HashRouter as Router }`.\"\n    );\n  };\n}\n\nexport default HashRouter;\n","import { createLocation } from \"history\";\n\nexport const resolveToLocation = (to, currentLocation) =>\n  typeof to === \"function\" ? to(currentLocation) : to;\n\nexport const normalizeToLocation = (to, currentLocation) => {\n  return typeof to === \"string\"\n    ? createLocation(to, null, null, currentLocation)\n    : to;\n};\n","import React from \"react\";\nimport { __RouterContext as RouterContext } from \"react-router\";\nimport { createPath } from 'history';\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nconst LinkAnchor = forwardRef(\n  (\n    {\n      innerRef, // TODO: deprecate\n      navigate,\n      onClick,\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    const { target } = rest;\n\n    let props = {\n      ...rest,\n      onClick: event => {\n        try {\n          if (onClick) onClick(event);\n        } catch (ex) {\n          event.preventDefault();\n          throw ex;\n        }\n\n        if (\n          !event.defaultPrevented && // onClick prevented default\n          event.button === 0 && // ignore everything but left clicks\n          (!target || target === \"_self\") && // let browser handle \"target=_blank\" etc.\n          !isModifiedEvent(event) // ignore clicks with modifier keys\n        ) {\n          event.preventDefault();\n          navigate();\n        }\n      }\n    };\n\n    // React 15 compat\n    if (forwardRefShim !== forwardRef) {\n      props.ref = forwardedRef || innerRef;\n    } else {\n      props.ref = innerRef;\n    }\n\n    /* eslint-disable-next-line jsx-a11y/anchor-has-content */\n    return <a {...props} />;\n  }\n);\n\nif (__DEV__) {\n  LinkAnchor.displayName = \"LinkAnchor\";\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nconst Link = forwardRef(\n  (\n    {\n      component = LinkAnchor,\n      replace,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <Link> outside a <Router>\");\n\n          const { history } = context;\n\n          const location = normalizeToLocation(\n            resolveToLocation(to, context.location),\n            context.location\n          );\n\n          const href = location ? history.createHref(location) : \"\";\n          const props = {\n            ...rest,\n            href,\n            navigate() {\n              const location = resolveToLocation(to, context.location);\n              const isDuplicateNavigation = createPath(context.location) === createPath(normalizeToLocation(location));\n              const method = (replace || isDuplicateNavigation) ? history.replace : history.push;\n\n              method(location);\n            }\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return React.createElement(component, props);\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  const toType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.func\n  ]);\n  const refType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any })\n  ]);\n\n  Link.displayName = \"Link\";\n\n  Link.propTypes = {\n    innerRef: refType,\n    onClick: PropTypes.func,\n    replace: PropTypes.bool,\n    target: PropTypes.string,\n    to: toType.isRequired\n  };\n}\n\nexport default Link;\n","import React from \"react\";\nimport { __RouterContext as RouterContext, matchPath } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport Link from \"./Link.js\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction joinClassnames(...classnames) {\n  return classnames.filter(i => i).join(\" \");\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = forwardRef(\n  (\n    {\n      \"aria-current\": ariaCurrent = \"page\",\n      activeClassName = \"active\", // TODO: deprecate\n      activeStyle, // TODO: deprecate\n      className: classNameProp,\n      exact,\n      isActive: isActiveProp,\n      location: locationProp,\n      sensitive,\n      strict,\n      style: styleProp,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <NavLink> outside a <Router>\");\n\n          const currentLocation = locationProp || context.location;\n          const toLocation = normalizeToLocation(\n            resolveToLocation(to, currentLocation),\n            currentLocation\n          );\n          const { pathname: path } = toLocation;\n          // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n          const escapedPath =\n            path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n\n          const match = escapedPath\n            ? matchPath(currentLocation.pathname, {\n                path: escapedPath,\n                exact,\n                sensitive,\n                strict\n              })\n            : null;\n          const isActive = !!(isActiveProp\n            ? isActiveProp(match, currentLocation)\n            : match);\n\n          let className =\n            typeof classNameProp === \"function\"\n              ? classNameProp(isActive)\n              : classNameProp;\n\n          let style =\n            typeof styleProp === \"function\" ? styleProp(isActive) : styleProp;\n\n          if (isActive) {\n            className = joinClassnames(className, activeClassName);\n            style = { ...style, ...activeStyle };\n          }\n\n          const props = {\n            \"aria-current\": (isActive && ariaCurrent) || null,\n            className,\n            style,\n            to: toLocation,\n            ...rest\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return <Link {...props} />;\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n\n  const ariaCurrentType = PropTypes.oneOf([\n    \"page\",\n    \"step\",\n    \"location\",\n    \"date\",\n    \"time\",\n    \"true\",\n    \"false\"\n  ]);\n\n  NavLink.propTypes = {\n    ...Link.propTypes,\n    \"aria-current\": ariaCurrentType,\n    activeClassName: PropTypes.string,\n    activeStyle: PropTypes.object,\n    className: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    exact: PropTypes.bool,\n    isActive: PropTypes.func,\n    location: PropTypes.object,\n    sensitive: PropTypes.bool,\n    strict: PropTypes.bool,\n    style: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\n  };\n}\n\nexport default NavLink;\n"],"names":["Password","props","useState","time","setTime","isActive","setIsActive","isLoading","setIsLoading","isLoadingresend","setIsLoadingresend","otp","setOtp","dispatch","useDispatch","userid","useHistory","useSelector","state","Auth","registersuccessId","email","useParams","console","log","useEffect","interval","setInterval","prevTime","clearInterval","className","src","value","onChange","numInputs","renderSeparator","renderInput","onClick","resendnewprimaryemailotp","id","type","class","role","minutes","Math","floor","seconds","formattedMinutes","String","padStart","formattedSeconds","formatTime","length","sendotopemail","otpCode","userId","disabled","Button","onHandleClick","children","variant","color","size","shape","rest","styleClass","classNames","styles","defaultProps","InputField","placeholder","onHandleChange","name","error","helpertext","inputFormDiv","Text","isStyleObject","obj","OTPInput","shouldAutoFocus","inputType","containerStyle","inputStyle","activeInput","setActiveInput","inputRefs","getOTPValue","toString","split","isInputNum","current","slice","focus","getPlaceholderValue","isInputValueValid","isNaN","Number","trim","handleChange","event","target","changeCodeAtFocus","focusInput","nativeEvent","data","preventDefault","handleBlur","handleKeyDown","code","key","includes","index","max","min","select","handleOTPChange","otpValue","join","handlePaste","nextActiveInput","pastedData","clipboardData","getData","some","pos","shift","style","Object","assign","display","alignItems","undefined","Array","from","_","map","ref","element","onFocus","handleFocus","onBlur","onKeyDown","onPaste","autoComplete","maxLength","width","textAlign","BrowserRouter","history","createHistory","render","Router","this","React","Component","basename","PropTypes","forceRefresh","getUserConfirmation","keyLength","number","warning","HashRouter","hashType","resolveToLocation","to","currentLocation","normalizeToLocation","createLocation","forwardRefShim","C","forwardRef","LinkAnchor","innerRef","navigate","ex","isModifiedEvent","forwardedRef","Link","component","replace","RouterContext","context","invariant","location","href","isDuplicateNavigation","createPath","method","toType","refType","any","isRequired","NavLink","ariaCurrent","activeClassName","activeStyle","classNameProp","exact","isActiveProp","locationProp","sensitive","strict","styleProp","toLocation","path","escapedPath","match","matchPath","classnames","i","joinClassnames","ariaCurrentType"],"sourceRoot":""}