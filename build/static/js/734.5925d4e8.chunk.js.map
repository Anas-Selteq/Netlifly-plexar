{"version":3,"file":"static/js/734.5925d4e8.chunk.js","mappings":"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","sources":["Pages/Auth/Headerauth/Headerauth.js","Pages/Auth/Password/Password.js","webpack://acadify_saas_frontend/./src/Shared/Button/style.module.scss?ba54","Shared/Button/Button.jsx","webpack://acadify_saas_frontend/./src/Shared/InputField/style.module.scss?5e45","Shared/InputField/InputField.jsx","Shared/InputField/index.js"],"sourcesContent":["import React from \"react\";\nimport \"./Headerauth.scss\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Headerauth() {\n  let history = useHistory();\n  return (\n    <div className=\"col-sm-12 px-md-5 \">\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <img\n            src=\"../images/plexar/plexaarlogo.png\"\n            className=\"img-fluid plexar_logo\"\n          />\n        </div>\n        <div className=\"col-md-6 text-right m-auto\">\n          <span className=\"color_font_one\">Already have account?</span>\n          <button className=\"btn btn-primary rounded-pill login_button_style\">\n            Login\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Headerauth;\n","import React, { useState } from \"react\";\r\nimport { Form, FormikProvider, useFormik } from \"formik\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\nimport { loginUser, signinuser } from \"../../../Store/Auth/actions\";\r\nimport Button from \"../../../Shared/Button/Button\";\r\nimport InputField from \"../../../Shared/InputField\";\r\nimport Headerauth from \"../Headerauth/Headerauth\";\r\nimport \"../Login/Login.scss\";\r\n\r\nexport default function Password(props) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isVisible, setVisible] = useState(false);\r\n  const [password, setpassword] = useState(\"\")\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\n  let { email } = useParams();\r\n  console.log(\"search params\", email);\r\n  const toggle = () => {\r\n    setVisible(!isVisible);\r\n  };\r\n  const handleNumberChange = (event) => {\r\n    const valuew = event.target.value;\r\n    setpassword(valuew);\r\n  };\r\n  const handleSubmit = () => {\r\n    console.log(\"button clicked\");\r\n    dispatch(\r\n      signinuser({\r\n        email: email,\r\n        password: password,\r\n        setIsLoading,\r\n      })\r\n    );\r\n    // history.push(`/password/${email}`);\r\n  };\r\n  // const loginUserSchema = Yup.object().shape({\r\n  //   email: Yup.string()\r\n  //     .email(\"Please enter valid email address\")\r\n  //     .required(\"Please enter email address\"),\r\n  //   password: Yup.string().required(\"Please enter password\"),\r\n  // });\r\n  // const formik = useFormik({\r\n  //   initialValues: {\r\n  //     email: \"\",\r\n  //     password: \"\",\r\n  //   },\r\n  //   enableReinitialize: true,\r\n  //   validationSchema: loginUserSchema,\r\n  //   onSubmit: async (values) => {\r\n  //     await dispatch(\r\n  //       loginUser({\r\n  //         email: values.email,\r\n  //         password: values.password,\r\n  //         resetForm: formik.resetForm,\r\n  //         history: history,\r\n  //         setIsLoading,\r\n  //       })\r\n  //     );\r\n  //   },\r\n  // });\r\n  return (\r\n    <div className=\"col-sm-12 px-0 height_page\">\r\n      <div className=\"col-sm-12 padding_top_bottom_equal\">\r\n        <Headerauth />\r\n      </div>\r\n      <div className=\"col-md-12 \">\r\n        <div className=\"col-md-12 px-5\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3 background_plexar text-center  d-flex align-items-center  justify-content-center\">\r\n              <img\r\n                className=\"img-fluid img_plexar_width\"\r\n                src=\"../images/plexar/plexar.png\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-9 border_welcome_to_plexar text-center \">\r\n              <div className=\"col-md-12 alignment_vertically\">\r\n                <h2>\r\n                  <b>{email}</b>\r\n                </h2>\r\n                <p className=\"sub_heading\">Is already registered</p>\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-4\"></div>\r\n                    <div className=\"col-md-4\">\r\n                      <div className=\"input-group  mt-5\">\r\n                        <input\r\n                          type={!isVisible ? \"password\" : \"text\"}\r\n                          className=\"form-control form-control-lg background_color_gray1\"\r\n                          placeholder=\"Enter Password\"\r\n                          aria-label=\"\"\r\n                          aria-describedby=\"basic-addon1\"\r\n                          onChange={handleNumberChange}\r\n                        />\r\n                        <div className=\"input-group-append\">\r\n                          <button\r\n                            onClick={toggle}\r\n                            className=\"btn btn-primary btn-lg background_color_gray\"\r\n                            type=\"button\"\r\n                          >\r\n                            {isVisible ? (\r\n                              <i id=\"eyeopen\" class=\"fas fa-eye-slash\"></i>\r\n                            ) : (\r\n                              <i id=\"eyeopen\" class=\"far fa-eye\"></i>\r\n                            )}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"col-md-12 px-0\">\r\n                        <button\r\n                          className=\"btn btn-primary button_width btn-lg\"\r\n                          onClick={handleSubmit}\r\n                          \r\n                        >\r\n                          {\" \"}\r\n                          Login{\" \"}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-12 bottom_attach \">\r\n                <hr />\r\n                <p className=\"sub_heading\">\r\n                  Terms & Conditions. Privacy Policy. Copyright. Cookies Policy.\r\n                  Help\r\n                </p>\r\n                <p className=\"sub_heading\">&copy; Selteq Ltd.</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btnDesign\":\"style_btnDesign__SmFZj\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport styles from \"./style.module.scss\";\n\nexport default function Button(props) {\n  const {\n    className,\n    onHandleClick,\n    children,\n    variant,\n    color,\n    type,\n    size,\n    shape,\n    isLoading,\n    ...rest\n  } = props;\n\n  const styleClass = classNames(\n    `btn ${styles.btnDesign}`,\n    variant ? `btn-${variant}-${color}` : `btn-${color}`,\n    { [`btn-${size}`]: size },\n    shape,\n    className\n  );\n\n  return (\n    <button\n      className={styleClass}\n      type={type}\n      disabled={isLoading}\n      onClick={onHandleClick}\n      {...rest}\n    >\n      {isLoading ? <div class=\"spinner-border\" role=\"status\" /> : children}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  className: PropTypes.string,\n  onHandleClick: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  color: PropTypes.string,\n  shape: PropTypes.string,\n  isLoading: PropTypes.bool,\n  size: PropTypes.oneOf([\"sm\", \"lg\"]),\n  type: PropTypes.oneOf([\"button\", \"submit\", \"reset\"]),\n  variant: PropTypes.oneOf([\"outline\", \"ghost\"]),\n};\nButton.defaultProps = {\n  className: \"\",\n  variant: null,\n  size: null,\n  isLoading: false,\n  onHandleClick: () => {},\n  color: \"primary\",\n  type: \"button\",\n  shape: \"rounded-1\",\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"inputFormDiv\":\"style_inputFormDiv__YOxui\",\"inputDesign\":\"style_inputDesign__QioYv\",\"errorMessage\":\"style_errorMessage__exT93\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Text from \"../Text\";\nimport styles from \"./style.module.scss\";\n\nexport default function InputField(props) {\n  const {\n    placeholder,\n    type,\n    onHandleChange,\n    value,\n    name,\n    className,\n    error,\n    disabled,\n    helpertext,\n    inputFormDiv,\n  } = props;\n\n  return (\n    <div className={`${styles.inputFormDiv} ${inputFormDiv}`}>\n      <input\n        type={type}\n        placeholder={placeholder}\n        name={name}\n        className={`${styles.inputDesign} ${className}`}\n        disabled={disabled}\n        onChange={onHandleChange}\n        value={value}\n      />\n      {error ? <Text className={styles.errorMessage}>{helpertext}</Text> : null}\n    </div>\n  );\n}\n\nInputField.propTypes = {\n  placeholder: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  inputFormDiv: PropTypes.string,\n  disabled: PropTypes.bool,\n  helpertext: PropTypes.string,\n  error: PropTypes.bool,\n  onHandleChange: PropTypes.func,\n  type: PropTypes.string,\n  value: PropTypes.string,\n  name: PropTypes.string,\n};\n\nInputField.defaultProps = {\n  placeholder: \"\",\n  type: \"\",\n  value: \"\",\n  name: \"\",\n  inputFormDiv: \"\",\n  onHandleChange: () => {},\n  className: null,\n  disabled: null,\n  helpertext: null,\n  error: true,\n};\n","import InputField from \"./InputField\";\n\nexport default InputField;\n"],"names":["useHistory","className","src","Password","props","useState","setIsLoading","isVisible","setVisible","password","setpassword","dispatch","useDispatch","email","useParams","console","log","type","placeholder","onChange","event","valuew","target","value","onClick","id","class","signinuser","Button","onHandleClick","children","variant","color","size","shape","isLoading","rest","styleClass","classNames","styles","disabled","role","defaultProps","InputField","onHandleChange","name","error","helpertext","inputFormDiv","Text"],"sourceRoot":""}