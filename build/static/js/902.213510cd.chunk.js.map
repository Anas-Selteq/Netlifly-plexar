{"version":3,"file":"static/js/902.213510cd.chunk.js","mappings":"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","sources":["Pages/PublicPages/Homepage/NavbarLanding/NavbarLanding.js","Pages/PublicPages/Terms/Terms.js","../node_modules/react-router-dom/modules/BrowserRouter.js","../node_modules/react-router-dom/modules/HashRouter.js","../node_modules/react-router-dom/modules/utils/locationUtils.js","../node_modules/react-router-dom/modules/Link.js","../node_modules/react-router-dom/modules/NavLink.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./NavbarLanding.scss\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nfunction NavbarLanding() {\n  const [show, handleShow] = useState(false);\n\n  const transitionNavBar = () => {\n    if (window.scrollY > 100) {\n      handleShow(true);\n    } else {\n      handleShow(false);\n    }\n  };\n  let history = useHistory();\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", transitionNavBar);\n    return () => window.removeEventListener(\"scroll\", transitionNavBar);\n  }, []);\n\n  return (\n    <div className=\"col-md-12\">\n      new navigation for landing will be avaliabel here\n      <Link to=\"/login\">\n        <button className=\"btn btn-primary\">Signin</button>\n      </Link>\n    </div>\n  );\n}\n\nexport default NavbarLanding;\n","import React from \"react\";\nimport NavbarLanding from \"../Homepage/NavbarLanding/NavbarLanding\";\nimport \"./Terms.scss\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Terms() {\n  let history = useHistory();\n\n  return (\n    <div className=\"col-sm-12 p-0\" style={{ backgroundColor: \"#F8F8FA\" }}>\n      <NavbarLanding />\n      <div className=\"col-sm-12 padding-top-tc\">\n        <div className=\"row\">\n          <div className=\"col-sm-3 text-center\">\n            <button\n              onClick={() => history.push(`/`)}\n              className=\"btn btn-light btn-lg rounded-circle button-outline-tc\"\n            >\n              <i class=\"fas fa-arrow-left\"></i>\n            </button>\n          </div>\n          <div className=\"col-sm-6\">\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <h3>\n                  <b>Privacy Policy</b>\n                </h3>\n              </div>\n              <div className=\"col-sm-6 text-right m-auto\">\n                <h6>\n                  Last modified: <b>May 12, 2022</b>\n                </h6>\n              </div>\n              <div className=\"col-sm-12 py-4 background_tc mt-4\">\n                <h5>\n                  <b>Introduction</b>\n                </h5>\n                <p>\n                  Nami, Inc. and its subsidiaries (\"<b>Company</b>\" or \"\n                  <b>We</b>\") respect your privacy and are committed to\n                  protecting it through our compliance with this policy.\n                </p>\n                <p>\n                  This policy describes the types of information we collect from\n                  you or that you may provide when you visit the website\n                  https://www.microacquire.com/,\n                  https://micromrr.microacquire.com/,\n                  https://www.microacquirealerts.com (our \"Website\") and our\n                  practices for collecting, using, maintaining, protecting, and\n                  disclosing that information.\n                </p>\n                <p>\n                  Nami, Inc. and its subsidiaries (\"<b>Company</b>\" or \"\n                  <b>We</b>\") respect your privacy and are committed to\n                  protecting it through our compliance with this policy.\n                </p>\n                <p>\n                  This policy describes the types of information we collect from\n                  you or that you may provide when you visit the website\n                  https://www.microacquire.com/,\n                  https://micromrr.microacquire.com/,\n                  https://www.microacquirealerts.com (our \"Website\") and our\n                  practices for collecting, using, maintaining, protecting, and\n                  disclosing that information.\n                </p>\n                <p>\n                  Nami, Inc. and its subsidiaries (\"<b>Company</b>\" or \"\n                  <b>We</b>\") respect your privacy and are committed to\n                  protecting it through our compliance with this policy.\n                </p>\n                <p>\n                  This policy describes the types of information we collect from\n                  you or that you may provide when you visit the website\n                  https://www.microacquire.com/,\n                  https://micromrr.microacquire.com/,\n                  https://www.microacquirealerts.com (our \"Website\") and our\n                  practices for collecting, using, maintaining, protecting, and\n                  disclosing that information.\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-sm-3\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Terms;\n","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createBrowserHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\nclass BrowserRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  BrowserRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    forceRefresh: PropTypes.bool,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number\n  };\n\n  BrowserRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<BrowserRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { BrowserRouter as Router }`.\"\n    );\n  };\n}\n\nexport default BrowserRouter;\n","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createHashHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\nclass HashRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  HashRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    getUserConfirmation: PropTypes.func,\n    hashType: PropTypes.oneOf([\"hashbang\", \"noslash\", \"slash\"])\n  };\n\n  HashRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<HashRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { HashRouter as Router }`.\"\n    );\n  };\n}\n\nexport default HashRouter;\n","import { createLocation } from \"history\";\n\nexport const resolveToLocation = (to, currentLocation) =>\n  typeof to === \"function\" ? to(currentLocation) : to;\n\nexport const normalizeToLocation = (to, currentLocation) => {\n  return typeof to === \"string\"\n    ? createLocation(to, null, null, currentLocation)\n    : to;\n};\n","import React from \"react\";\nimport { __RouterContext as RouterContext } from \"react-router\";\nimport { createPath } from 'history';\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nconst LinkAnchor = forwardRef(\n  (\n    {\n      innerRef, // TODO: deprecate\n      navigate,\n      onClick,\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    const { target } = rest;\n\n    let props = {\n      ...rest,\n      onClick: event => {\n        try {\n          if (onClick) onClick(event);\n        } catch (ex) {\n          event.preventDefault();\n          throw ex;\n        }\n\n        if (\n          !event.defaultPrevented && // onClick prevented default\n          event.button === 0 && // ignore everything but left clicks\n          (!target || target === \"_self\") && // let browser handle \"target=_blank\" etc.\n          !isModifiedEvent(event) // ignore clicks with modifier keys\n        ) {\n          event.preventDefault();\n          navigate();\n        }\n      }\n    };\n\n    // React 15 compat\n    if (forwardRefShim !== forwardRef) {\n      props.ref = forwardedRef || innerRef;\n    } else {\n      props.ref = innerRef;\n    }\n\n    /* eslint-disable-next-line jsx-a11y/anchor-has-content */\n    return <a {...props} />;\n  }\n);\n\nif (__DEV__) {\n  LinkAnchor.displayName = \"LinkAnchor\";\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nconst Link = forwardRef(\n  (\n    {\n      component = LinkAnchor,\n      replace,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <Link> outside a <Router>\");\n\n          const { history } = context;\n\n          const location = normalizeToLocation(\n            resolveToLocation(to, context.location),\n            context.location\n          );\n\n          const href = location ? history.createHref(location) : \"\";\n          const props = {\n            ...rest,\n            href,\n            navigate() {\n              const location = resolveToLocation(to, context.location);\n              const isDuplicateNavigation = createPath(context.location) === createPath(normalizeToLocation(location));\n              const method = (replace || isDuplicateNavigation) ? history.replace : history.push;\n\n              method(location);\n            }\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return React.createElement(component, props);\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  const toType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.func\n  ]);\n  const refType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any })\n  ]);\n\n  Link.displayName = \"Link\";\n\n  Link.propTypes = {\n    innerRef: refType,\n    onClick: PropTypes.func,\n    replace: PropTypes.bool,\n    target: PropTypes.string,\n    to: toType.isRequired\n  };\n}\n\nexport default Link;\n","import React from \"react\";\nimport { __RouterContext as RouterContext, matchPath } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport Link from \"./Link.js\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction joinClassnames(...classnames) {\n  return classnames.filter(i => i).join(\" \");\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = forwardRef(\n  (\n    {\n      \"aria-current\": ariaCurrent = \"page\",\n      activeClassName = \"active\", // TODO: deprecate\n      activeStyle, // TODO: deprecate\n      className: classNameProp,\n      exact,\n      isActive: isActiveProp,\n      location: locationProp,\n      sensitive,\n      strict,\n      style: styleProp,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <NavLink> outside a <Router>\");\n\n          const currentLocation = locationProp || context.location;\n          const toLocation = normalizeToLocation(\n            resolveToLocation(to, currentLocation),\n            currentLocation\n          );\n          const { pathname: path } = toLocation;\n          // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n          const escapedPath =\n            path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n\n          const match = escapedPath\n            ? matchPath(currentLocation.pathname, {\n                path: escapedPath,\n                exact,\n                sensitive,\n                strict\n              })\n            : null;\n          const isActive = !!(isActiveProp\n            ? isActiveProp(match, currentLocation)\n            : match);\n\n          let className =\n            typeof classNameProp === \"function\"\n              ? classNameProp(isActive)\n              : classNameProp;\n\n          let style =\n            typeof styleProp === \"function\" ? styleProp(isActive) : styleProp;\n\n          if (isActive) {\n            className = joinClassnames(className, activeClassName);\n            style = { ...style, ...activeStyle };\n          }\n\n          const props = {\n            \"aria-current\": (isActive && ariaCurrent) || null,\n            className,\n            style,\n            to: toLocation,\n            ...rest\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return <Link {...props} />;\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n\n  const ariaCurrentType = PropTypes.oneOf([\n    \"page\",\n    \"step\",\n    \"location\",\n    \"date\",\n    \"time\",\n    \"true\",\n    \"false\"\n  ]);\n\n  NavLink.propTypes = {\n    ...Link.propTypes,\n    \"aria-current\": ariaCurrentType,\n    activeClassName: PropTypes.string,\n    activeStyle: PropTypes.object,\n    className: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    exact: PropTypes.bool,\n    isActive: PropTypes.func,\n    location: PropTypes.object,\n    sensitive: PropTypes.bool,\n    strict: PropTypes.bool,\n    style: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\n  };\n}\n\nexport default NavLink;\n"],"names":["useState","handleShow","transitionNavBar","window","scrollY","useHistory","useEffect","addEventListener","removeEventListener","className","to","history","style","backgroundColor","NavbarLanding","onClick","push","class","React","resolveToLocation","currentLocation","normalizeToLocation","createLocation","forwardRefShim","C","forwardRef","LinkAnchor","innerRef","navigate","rest","target","props","event","ex","isModifiedEvent","forwardedRef","Link","component","replace","RouterContext","context","location","href","isDuplicateNavigation","createPath","method","ariaCurrent","activeClassName","activeStyle","classNameProp","exact","isActiveProp","isActive","locationProp","sensitive","strict","styleProp","toLocation","path","escapedPath","match","matchPath","classnames","i","joinClassnames"],"sourceRoot":""}