{"version":3,"file":"static/js/883.2a23c07e.chunk.js","mappings":"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","sources":["Pages/Auth/Createpassword/Createpassword.js","Pages/Auth/Headerauth/Headerauth.js","webpack://acadify_saas_frontend/./src/Shared/Button/style.module.scss?ba54","Shared/Button/Button.jsx","webpack://acadify_saas_frontend/./src/Shared/InputField/style.module.scss?5e45","Shared/InputField/InputField.jsx","Shared/InputField/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, FormikProvider, useFormik } from \"formik\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  loginUser,\r\n  sendotopemailsuccess,\r\n  setuserpassword,\r\n} from \"../../../Store/Auth/actions\";\r\nimport Button from \"../../../Shared/Button/Button\";\r\nimport InputField from \"../../../Shared/InputField\";\r\nimport Headerauth from \"../Headerauth/Headerauth\";\r\nimport \"../Login/Login.scss\";\r\n\r\nexport default function Createpassword(props) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isVisible, setVisible] = useState(false);\r\n  const [isVisible1, setVisible1] = useState(false);\r\n  const userotp = useSelector((state) => state.Auth?.otpuser);\r\n  const userid = useSelector((state) => state.Auth?.registersuccessId);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmpassword, setConfirmpassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\n  const toggle = () => {\r\n    setVisible(!isVisible);\r\n  };\r\n  const toggle1 = () => {\r\n    setVisible1(!isVisible1);\r\n  };\r\n  const handleNumberChange = (event) => {\r\n    const valuew = event.target.value;\r\n    setPassword(valuew);\r\n    // setValid(validateEmail(valuew));\r\n  };\r\n  const handleNumberChangeNew = (event) => {\r\n    const valuew = event.target.value;\r\n    setConfirmpassword(valuew);\r\n    // setValid(validateEmail(valuew));\r\n  };\r\n  const handleSubmit = () => {\r\n    dispatch(\r\n      setuserpassword({\r\n        id: userid,\r\n        password: password,\r\n        otp: userotp,\r\n        setIsLoading,\r\n      })\r\n    );\r\n  };\r\n\r\n  /////check------------------\r\n  // const hasUppercase = /[A-Z]/;\r\n  // const hasLowercase = /[a-z]/;\r\n  const hasNumber = /[0-9]/;\r\n  const hasMinimumLength = /^.{8,}$/;\r\n  const hasSymbol = /[-!@#$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n  // const checkUppercase = (password) => hasUppercase.test(password);\r\n  // const checkLowercase = (password) => hasLowercase.test(password);\r\n  const checkNumber = (password) => hasNumber.test(password);\r\n  const eightcharacters = (password) => hasMinimumLength.test(password);\r\n  const atleastonesymbol = (password) => hasSymbol.test(password);\r\n\r\n  const renderCheck = (check) => {\r\n    return check ? (\r\n      <span style={{ color: \"green\" }}>✓</span>\r\n    ) : (\r\n      <span style={{ color: \"red\" }}>✗</span>\r\n    );\r\n  };\r\n  console.log(\"new password---->\", password);\r\n  return (\r\n    <div className=\"col-sm-12 px-0 height_page\">\r\n      <div className=\"col-sm-12 padding_top_bottom_equal\">\r\n        <Headerauth />\r\n      </div>\r\n      <div className=\"col-md-12 \">\r\n        <div className=\"col-md-12 px-5\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3 background_plexar text-center  d-flex align-items-center  justify-content-center\">\r\n              <img\r\n                className=\"img-fluid img_plexar_width\"\r\n                src=\"../images/plexar/plexar.png\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-9 border_welcome_to_plexar text-center \">\r\n              <div className=\"col-md-12 alignment_vertically\">\r\n                <h2>\r\n                  <b>\r\n                    Create <span className=\"plexar_font\">Password</span>\r\n                  </b>\r\n                </h2>\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-4\"></div>\r\n                    <div className=\"col-md-4\">\r\n                      <div className=\"input-group  mt-5\">\r\n                        <input\r\n                          // type=\"password\"\r\n                          type={!isVisible ? \"password\" : \"text\"}\r\n                          className=\"form-control form-control-lg background_color_gray1\"\r\n                          placeholder=\"Enter Password\"\r\n                          aria-label=\"\"\r\n                          aria-describedby=\"basic-addon1\"\r\n                          value={password}\r\n                          onChange={handleNumberChange}\r\n                        />\r\n                        <div className=\"input-group-append\">\r\n                          <button\r\n                            onClick={toggle}\r\n                            className=\"btn btn-primary btn-lg background_color_gray\"\r\n                            type=\"button\"\r\n                          >\r\n                            {isVisible ? (\r\n                              <i id=\"eyeopen\" class=\"fas fa-eye-slash\"></i>\r\n                            ) : (\r\n                              <i id=\"eyeopen\" class=\"far fa-eye\"></i>\r\n                            )}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"input-group  mt-3\">\r\n                        <input\r\n                          type={!isVisible1 ? \"password\" : \"text\"}\r\n                          value={confirmpassword}\r\n                          onChange={handleNumberChangeNew}\r\n                          className=\"form-control form-control-lg background_color_gray1\"\r\n                          placeholder=\"Confirm Password\"\r\n                          aria-label=\"\"\r\n                          aria-describedby=\"basic-addon1\"\r\n                        />\r\n                        <div className=\"input-group-append\">\r\n                          <button\r\n                            onClick={toggle1}\r\n                            className=\"btn btn-primary btn-lg background_color_gray\"\r\n                            type=\"button\"\r\n                          >\r\n                            {isVisible1 ? (\r\n                              <i id=\"eyeopen\" class=\"fas fa-eye-slash\"></i>\r\n                            ) : (\r\n                              <i id=\"eyeopen\" class=\"far fa-eye\"></i>\r\n                            )}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"text-left\">\r\n                        {/* Uppercase: {renderCheck(checkUppercase(password))}\r\n                        Lowercase: {renderCheck(checkLowercase(password))} */}\r\n                        <p className=\"mb-0 font_size_password pt-3\">\r\n                          {renderCheck(checkNumber(password))} At least 8\r\n                          characters\r\n                        </p>\r\n                        <p className=\"mb-0 font_size_password pt-2\">\r\n                          {renderCheck(eightcharacters(password))} At least one\r\n                          number\r\n                        </p>\r\n                        <p className=\"mb-0 font_size_password pt-2\">\r\n                          {renderCheck(atleastonesymbol(password))} !@#$% at\r\n                          least one symbol\r\n                        </p>\r\n                      </div>\r\n\r\n                      <div className=\"col-md-12 px-0\">\r\n                        {password === confirmpassword && password !== \"\" ? (\r\n                          <button\r\n                            className=\"btn btn-primary button_width btn-lg\"\r\n                            onClick={handleSubmit}\r\n                          >\r\n                            {isLoading ? (\r\n                              <div\r\n                                class=\"spinner-border text-light\"\r\n                                role=\"status\"\r\n                              >\r\n                                <span class=\"sr-only\">Loading...</span>\r\n                              </div>\r\n                            ) : (\r\n                              <> Save & Continue</>\r\n                            )}\r\n                          </button>\r\n                        ) : (\r\n                          <button className=\"btn btn-primary button_width_disabled btn-lg\">\r\n                            {\" \"}\r\n                            Save & Continue{\" \"}\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-12 bottom_attach \">\r\n                <hr />\r\n                <p className=\"sub_heading\">\r\n                  Terms & Conditions. Privacy Policy. Copyright. Cookies Policy.\r\n                  Help\r\n                </p>\r\n                <p className=\"sub_heading\">&copy; Selteq Ltd.</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./Headerauth.scss\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Headerauth() {\n  let history = useHistory();\n  return (\n    <div className=\"col-sm-12 px-md-5 \">\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <img\n            src=\"../images/plexar/plexaarlogo.png\"\n            className=\"img-fluid plexar_logo\"\n          />\n        </div>\n        <div className=\"col-md-6 text-right m-auto\">\n          <span className=\"color_font_one\">Already have account?</span>\n          <button className=\"btn btn-primary rounded-pill login_button_style\">\n            Login\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Headerauth;\n","// extracted by mini-css-extract-plugin\nexport default {\"btnDesign\":\"style_btnDesign__SmFZj\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport styles from \"./style.module.scss\";\n\nexport default function Button(props) {\n  const {\n    className,\n    onHandleClick,\n    children,\n    variant,\n    color,\n    type,\n    size,\n    shape,\n    isLoading,\n    ...rest\n  } = props;\n\n  const styleClass = classNames(\n    `btn ${styles.btnDesign}`,\n    variant ? `btn-${variant}-${color}` : `btn-${color}`,\n    { [`btn-${size}`]: size },\n    shape,\n    className\n  );\n\n  return (\n    <button\n      className={styleClass}\n      type={type}\n      disabled={isLoading}\n      onClick={onHandleClick}\n      {...rest}\n    >\n      {isLoading ? <div class=\"spinner-border\" role=\"status\" /> : children}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  className: PropTypes.string,\n  onHandleClick: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  color: PropTypes.string,\n  shape: PropTypes.string,\n  isLoading: PropTypes.bool,\n  size: PropTypes.oneOf([\"sm\", \"lg\"]),\n  type: PropTypes.oneOf([\"button\", \"submit\", \"reset\"]),\n  variant: PropTypes.oneOf([\"outline\", \"ghost\"]),\n};\nButton.defaultProps = {\n  className: \"\",\n  variant: null,\n  size: null,\n  isLoading: false,\n  onHandleClick: () => {},\n  color: \"primary\",\n  type: \"button\",\n  shape: \"rounded-1\",\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"inputFormDiv\":\"style_inputFormDiv__YOxui\",\"inputDesign\":\"style_inputDesign__QioYv\",\"errorMessage\":\"style_errorMessage__exT93\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Text from \"../Text\";\nimport styles from \"./style.module.scss\";\n\nexport default function InputField(props) {\n  const {\n    placeholder,\n    type,\n    onHandleChange,\n    value,\n    name,\n    className,\n    error,\n    disabled,\n    helpertext,\n    inputFormDiv,\n  } = props;\n\n  return (\n    <div className={`${styles.inputFormDiv} ${inputFormDiv}`}>\n      <input\n        type={type}\n        placeholder={placeholder}\n        name={name}\n        className={`${styles.inputDesign} ${className}`}\n        disabled={disabled}\n        onChange={onHandleChange}\n        value={value}\n      />\n      {error ? <Text className={styles.errorMessage}>{helpertext}</Text> : null}\n    </div>\n  );\n}\n\nInputField.propTypes = {\n  placeholder: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  inputFormDiv: PropTypes.string,\n  disabled: PropTypes.bool,\n  helpertext: PropTypes.string,\n  error: PropTypes.bool,\n  onHandleChange: PropTypes.func,\n  type: PropTypes.string,\n  value: PropTypes.string,\n  name: PropTypes.string,\n};\n\nInputField.defaultProps = {\n  placeholder: \"\",\n  type: \"\",\n  value: \"\",\n  name: \"\",\n  inputFormDiv: \"\",\n  onHandleChange: () => {},\n  className: null,\n  disabled: null,\n  helpertext: null,\n  error: true,\n};\n","import InputField from \"./InputField\";\n\nexport default InputField;\n"],"names":["Createpassword","props","useState","isLoading","setIsLoading","isVisible","setVisible","isVisible1","setVisible1","userotp","useSelector","state","Auth","otpuser","userid","registersuccessId","password","setPassword","confirmpassword","setConfirmpassword","dispatch","useDispatch","hasNumber","useHistory","hasMinimumLength","hasSymbol","renderCheck","check","style","color","console","log","className","src","type","placeholder","value","onChange","event","valuew","target","onClick","id","class","test","checkNumber","eightcharacters","atleastonesymbol","setuserpassword","otp","role","Button","onHandleClick","children","variant","size","shape","rest","styleClass","classNames","styles","disabled","defaultProps","InputField","onHandleChange","name","error","helpertext","inputFormDiv","Text"],"sourceRoot":""}